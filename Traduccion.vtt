WEBVTT

00:00:00.000 --> 00:00:03.330
Hola, y bienvenido a Postgres para todos.

00:00:03.330 --> 00:00:05.400
Este es un curso que he soñado.

00:00:05.400 --> 00:00:07.530
de docencia durante más de una década.

00:00:07.530 --> 00:00:10.695
Puede que me hayas conocido en otro curso,

00:00:10.695 --> 00:00:12.735
como Python para todos,

00:00:12.735 --> 00:00:15.780
Django para Todos, o Aplicaciones Web para Todos.

00:00:15.780 --> 00:00:17.880
Verás en cada uno de esos cursos, en

00:00:17.880 --> 00:00:20.415
todos esos cursos, tengo que enseñar SQL.

00:00:20.415 --> 00:00:24.290
Resulta que enseño SQL básico una y otra vez.

00:00:24.290 --> 00:00:27.645
Es como ser maestra de jardín de infantes porque yo

00:00:27.645 --> 00:00:30.990
no puedo entrar en el detalle de que

00:00:30.990 --> 00:00:32.250
quiero porque en cada uno de

00:00:32.250 --> 00:00:34.635
esas clases tengo otro tema que cubrir.

00:00:34.635 --> 00:00:37.335
Así que tengo que enseñarte CRUD,

00:00:37.335 --> 00:00:38.885
Crear, Leer, Actualizar, Eliminar,

00:00:38.885 --> 00:00:42.380
qué es un índice, qué es una combinación, qué es una clave externa.

00:00:42.380 --> 00:00:46.585
Y luego pasar al tema que sea.

00:00:46.585 --> 00:00:51.275
Y muchos de ustedes me han dicho a lo largo de los años que les gusta

00:00:51.275 --> 00:00:53.900
la parte SQL de las clases y que

00:00:53.900 --> 00:00:56.689
Ojalá pudieras programar más en SQL.

00:00:56.689 --> 00:00:58.580
Y realmente, mientras construyo

00:00:58.580 --> 00:01:01.265
aplicaciones de enseñanza y aprendizaje en línea,

00:01:01.265 --> 00:01:04.800
la parte SQL es casi la parte más creativa.

00:01:04.800 --> 00:01:08.405
Otros son mejores en el diseño de bonitas interfaces de usuario.

00:01:08.405 --> 00:01:10.700
Pero para mí, el SQL es donde

00:01:10.700 --> 00:01:16.805
de donde proviene la esencia de las aplicaciones y el rendimiento.

00:01:16.805 --> 00:01:19.460
Y así que hay mucho más para

00:01:19.460 --> 00:01:22.475
aprende y es muy divertido trabajar con él.

00:01:22.475 --> 00:01:26.555
Y este es mi momento en el que ahora tengo una serie de

00:01:26.555 --> 00:01:28.820
cursos que no pueden hacer nada

00:01:28.820 --> 00:01:31.355
pero las bases de datos, te enseño todo lo que quiero.

00:01:31.355 --> 00:01:33.110
no tengo que hacer nada mas

00:01:33.110 --> 00:01:37.195
bases de datos, y eso es realmente emocionante para mí.

00:01:37.195 --> 00:01:41.865
Ahora, podría preguntarse ¿por qué Postgres?

00:01:41.865 --> 00:01:43.965
¿Por qué PostgreSQL?

00:01:43.965 --> 00:01:50.100
Aquí está el pequeño elefante, esa es la mascota de Postgres.

00:01:50.100 --> 00:01:53.340
Los buenos proyectos de código abierto necesitan mascotas.

00:01:53.340 --> 00:01:55.700
Aquí está la mascota de mi proyecto Sakai, el

00:01:55.700 --> 00:01:59.180
Sakaiger. Tengo la mascota de Postgres

00:01:59.180 --> 00:02:02.545
y el Sakaiger y una mascota de Postgres. Ahí vas.

00:02:02.545 --> 00:02:06.515
Entonces, ¿por qué Postgres? Me gusta el código abierto,

00:02:06.515 --> 00:02:09.740
pero entonces podría decir, ¿por qué no MySQL?

00:02:09.740 --> 00:02:12.065
Y solo diré esto.

00:02:12.065 --> 00:02:14.480
Yo también me sentí así.

00:02:14.480 --> 00:02:16.940
Usé MySQL durante mucho, mucho tiempo.

00:02:16.940 --> 00:02:17.960
Me encanta el código abierto.

00:02:17.960 --> 00:02:19.940
Construyo mucho software de código abierto.

00:02:19.940 --> 00:02:22.370
El autonivelador que vas a tomar en esta clase,

00:02:22.370 --> 00:02:26.070
que en realidad está usando MySQL.

00:02:26.770 --> 00:02:29.330
Pero aquí está la cosa.

00:02:29.330 --> 00:02:31.010
Solía ​​ser al principio,

00:02:31.010 --> 00:02:32.930
era fácil de saber

00:02:32.930 --> 00:02:35.935
qué base de datos era la correcta para usar.

00:02:35.935 --> 00:02:38.120
Podrías usar Oracle

00:02:38.120 --> 00:02:39.620
si estuvieras en un entorno corporativo y

00:02:39.620 --> 00:02:41.360
su empresa había elegido Oracle.

00:02:41.360 --> 00:02:43.400
Podrías usar MySQL si estuvieras

00:02:43.400 --> 00:02:45.260
un entorno de código abierto y usted

00:02:45.260 --> 00:02:48.020
insistía en dar cosas gratis a la gente.

00:02:48.020 --> 00:02:50.840
Es posible que haya utilizado SQL Server, por ejemplo,

00:02:50.840 --> 00:02:55.490
si está en una organización que es una tienda de Microsoft.

00:02:55.490 --> 00:02:58.190
Y así parecía que basado en el lugar donde empezaste,

00:02:58.190 --> 00:03:00.660
la respuesta era obvia.

00:03:01.250 --> 00:03:06.215
Y luego, hace un tiempo, Oracle compró MySQL.

00:03:06.215 --> 00:03:08.150
Ahora no compraron todo MySQL.

00:03:08.150 --> 00:03:09.530
MySQL es de código abierto,

00:03:09.530 --> 00:03:12.485
pero compraron suficiente del equipo construyéndolo para que

00:03:12.485 --> 00:03:16.850
Oracle poseía el destino futuro de MySQL.

00:03:16.850 --> 00:03:20.060
Y algunos de nosotros nos pusimos un poco nerviosos porque muchos de nosotros

00:03:20.060 --> 00:03:23.750
había elegido MySQL solo para evitar Oracle.

00:03:23.750 --> 00:03:25.370
No quiero ir, no quiero usar Oracle,

00:03:25.370 --> 00:03:26.585
No quiero pagar cada vez que

00:03:26.585 --> 00:03:28.370
como instalar algo.

00:03:28.370 --> 00:03:30.815
Ahora, lo que pasó en ese punto

00:03:30.815 --> 00:03:32.885
alguien tomó la copia de código abierto,

00:03:32.885 --> 00:03:34.070
hicieron una copia del código abierto

00:03:34.070 --> 00:03:36.935
MySQL y lo llamó MariahDB.

00:03:36.935 --> 00:03:40.460
Y la idea era, como continuaría MySQL,

00:03:40.460 --> 00:03:41.660
entonces la gente de código abierto

00:03:41.660 --> 00:03:43.820
sigue lanzando MariahDB.

00:03:43.820 --> 00:03:48.215
El problema fue que también sucedió en el momento,

00:03:48.215 --> 00:03:52.620
como veremos más adelante en Postgres para todos,

00:03:52.930 --> 00:03:55.850
el entorno competitivo para

00:03:55.850 --> 00:03:59.990
bases de datos era cada vez más difícil.

00:03:59.990 --> 00:04:05.210
Desafíos del almacenamiento NoSQL.

00:04:05.210 --> 00:04:08.345
La necesidad de almacenar JSON, algo que

00:04:08.345 --> 00:04:10.505
las bases de datos relacionales clásicas no habían

00:04:10.505 --> 00:04:11.975
realmente pensé en mucho,

00:04:11.975 --> 00:04:13.430
pero resulta que son muy,

00:04:13.430 --> 00:04:16.820
muy importante. y bases de datos relacionales

00:04:16.820 --> 00:04:18.740
una especie de vio su agarre en el mundo

00:04:18.740 --> 00:04:21.650
deslizándose como cosas como Mongo y

00:04:21.650 --> 00:04:25.770
Cassandra salió que eran bases de datos NoSQL.

00:04:26.080 --> 00:04:29.045
Y así bases de datos relacionales como SQL

00:04:29.045 --> 00:04:32.210
y Oracle y Postgres tuvieron que reaccionar.

00:04:32.210 --> 00:04:37.970
Y el problema era que MySQL 5 estaba pre

00:04:37.970 --> 00:04:39.320
toda esta reacción

00:04:39.320 --> 00:04:41.190
y toda esta preocupación del mercado.

00:04:41.190 --> 00:04:45.530
Y entonces Oracle tuvo que invertir en MySQL

00:04:45.530 --> 00:04:49.835
para hacerlo competitivo con todos estos otros productos,

00:04:49.835 --> 00:04:53.550
y terminaron lanzando algo llamado MySQL 8.

00:04:54.530 --> 00:04:58.730
Y la comunidad de la base de datos de Mariah tendrá que

00:04:58.730 --> 00:05:03.020
ver hasta qué punto se han mantenido al día con MySQL 8,

00:05:03.020 --> 00:05:04.880
Creo que es Mariah 10.

00:05:04.880 --> 00:05:07.580
Si suficientes de nosotros, personas de código abierto, saltamos

00:05:07.580 --> 00:05:10.910
en Mariah, eso funcionará.

00:05:10.910 --> 00:05:12.680
Pero el problema ahora es

00:05:12.680 --> 00:05:16.234
el MariahDB es un cambio,

00:05:16.234 --> 00:05:18.260
un pequeño cambio, para la gente de MySQL.

00:05:18.260 --> 00:05:20.525
Quizás Mariah sea la respuesta.

00:05:20.525 --> 00:05:23.240
Pero Oracle, quiero decir

00:05:23.240 --> 00:05:25.520
Postgres, se ha convertido en una especie de

00:05:25.520 --> 00:05:27.020
esta interesante alternativa porque

00:05:27.020 --> 00:05:29.900
es robusta, sólidamente de código abierto.

00:05:29.900 --> 00:05:33.860
Y puede que hayas oído o no que Amazon,

00:05:33.860 --> 00:05:38.000
cuando comenzó a finales de los noventa, eligió Oracle.

00:05:38.000 --> 00:05:40.580
¿Por qué? Porque es lo que hacías si querías

00:05:40.580 --> 00:05:42.020
una base de datos rápida y no

00:05:42.020 --> 00:05:43.460
quiere convertirse en una empresa de base de datos,

00:05:43.460 --> 00:05:45.500
que no es en lo que Amazon quería convertirse.

00:05:45.500 --> 00:05:49.650
Y entonces construyeron muchas cosas alrededor de la base de datos de Oracle.

00:05:49.650 --> 00:05:52.170
Bueno, el problema es

00:05:52.170 --> 00:05:54.710
que eso les costó mucho dinero y como

00:05:54.710 --> 00:05:56.690
Amazon se hizo más y más grande y más grande

00:05:56.690 --> 00:05:59.870
su factura de Oracle se hizo más y más grande y más grande.

00:05:59.870 --> 00:06:01.760
Y eso hizo que Larry Ellison,

00:06:01.760 --> 00:06:04.085
el fundador de Oracle, muy, muy rico.

00:06:04.085 --> 00:06:06.020
Rico tanto hasta el punto donde

00:06:06.020 --> 00:06:10.040
el personaje de Iron Man está basado en Larry Ellison.

00:06:10.040 --> 00:06:14.960
Entonces, Amazon gastó una gran cantidad de dinero para dejar de usar Oracle,

00:06:14.960 --> 00:06:20.305
pero en su lugar use Postgres. Y lo han hecho.

00:06:20.305 --> 00:06:23.720
Creo que hace algún tiempo anunciaron que hay

00:06:23.720 --> 00:06:28.550
ya no se usa Oracle dentro de Amazon y todo es Postgres.

00:06:28.550 --> 00:06:31.820
Y todo esto nos está haciendo muchos,

00:06:31.820 --> 00:06:35.135
código abierto y de otra manera,

00:06:35.135 --> 00:06:37.250
mira Postgres,

00:06:37.250 --> 00:06:40.115
y también debería estar mirando Postgres.

00:06:40.115 --> 00:06:41.810
he echado un vistazo a

00:06:41.810 --> 00:06:43.610
Postgres y estoy contento con lo que veo.

00:06:43.610 --> 00:06:47.240
Oracle, la comunidad de Postgres es muy,

00:06:47.240 --> 00:06:50.015
Muy buena comunidad de código abierto. Soy un gran fan.

00:06:50.015 --> 00:06:51.950
Estoy celoso de muchas maneras.

00:06:51.950 --> 00:06:54.170
Son grandes, tienen talento.

00:06:54.170 --> 00:06:55.955
Ellos han estado haciendo esto por

00:06:55.955 --> 00:07:00.440
20 años y es una base de datos SQL avanzada.

00:07:00.440 --> 00:07:04.680
Es sólido, escala. Amazon basa sus productos en

00:07:04.680 --> 00:07:07.520
Postgres, y así es el momento,

00:07:07.520 --> 00:07:10.450
Creo que, para que tomemos una mirada realmente seria a Postgres.

00:07:10.450 --> 00:07:13.430
Así que estoy feliz de que mi primera incursión en

00:07:13.430 --> 00:07:17.090
SQL avanzado es presentarle Postgres.

00:07:17.090 --> 00:07:19.610
Así que espero que seas tan fanático de

00:07:19.610 --> 00:07:23.010
Postgres como soy una vez que este curso esté completo.
